# Main HTTP server block
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Handle all Host headers
    server_name _;

    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Disable server tokens for security
    server_tokens off;

    # Set default character set
    charset utf-8;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;
    gzip_disable "MSIE [1-6]\.";

    # Config files
    location /config/ {
        alias /usr/share/nginx/html/config/;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        expires -1;
    }

    # Proxy for the Node.js proxy server - handle all /api/ requests
    location /api/ {
        # Enhanced debug logging
        access_log /var/log/nginx/api_access.log combined buffer=512k flush=1m;
        error_log /var/log/nginx/api_error.log debug;

        # Proxy settings - include /api/ in the target URL since the Node.js proxy expects it
        proxy_pass http://127.0.0.1:3001/api/;  # Include /api/ to match the proxy's expected path
        proxy_http_version 1.1;

        # Important headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Debug headers
        add_header X-NGINX-Request-URI $request_uri always;
        add_header X-NGINX-Proxy-Pass $proxy_host$uri always;
        add_header X-NGINX-Remote-Addr $remote_addr always;

        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.html;

        # Debug info
        add_header X-Debug-Proxy-Pass $proxy_host$uri;
        add_header X-Debug-Remote-Addr $remote_addr;

        # Disable buffering for streaming responses
        proxy_buffering off;
    }

    # Static assets with cache
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff2?|css|js)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    # HTML files - no cache
    location ~* \.html$ {
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
        try_files $uri $uri/ /index.html;
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security - deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Disable logging for common files
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # Disable logging for robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK\n';
    }
}