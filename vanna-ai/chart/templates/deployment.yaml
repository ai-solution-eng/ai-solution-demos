apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vanna-ai.fullname" . }}
  labels:
    {{- include "vanna-ai.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "vanna-ai.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vanna-ai.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: PYTHON_UNBUFFERED
              value: "1"
            - name: CHAT_MODEL
              value: {{ .Values.settings.Chatmodel }}
            - name: CHAT_MODEL_BASE_URL
              value: {{ .Values.settings.Chatmodelbaseurl }}
            - name: OPENAI_API_KEY
              value: {{ .Values.settings.Chatmodelkey }}
            - name: DATABASE_CONNECTION_STRING
              value: {{ .Values.settings.Database }}
            - name: DB_PATH
              value: {{ .Values.settings.DatabasePath }}
            - name: DB_TYPE
              value: {{ .Values.settings.DatabaseType }}
            - name: PG_HOST
              value: {{ .Values.settings.postgres.host }}
            - name: PG_PORT
              value: {{ .Values.settings.postgres.port | quote }}
            - name: PG_USER
              value: {{ .Values.settings.postgres.user }}
            - name: PG_PASSWORD
              value: {{ .Values.settings.postgres.password }}
            - name: PG_DBNAME
              value: {{ .Values.settings.postgres.dbname }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["python3","vanna-flask.py"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}